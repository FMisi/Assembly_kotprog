====================================================================
C
====================================================================
#include <stdio.h>

int is_perfect(int value){
    int oszto=1, osszeg=0;
    while(oszto<=value/2){
        if(value % oszto == 0){
        osszeg+=oszto;
        }
        oszto++;
    }

    if(osszeg==value){
        return 1;
        }
    else {
        return 0;
        }
}

int main(){
    int eredmeny = is_perfect (6);
    printf("Tokeletes szam? %d\n", eredmeny);
    return 0;
}

====================================================================
Assembly
====================================================================
is_perfect:
        push    rbp
        mov     rbp, rsp
        mov     DWORD PTR [rbp-20], edi
        mov     DWORD PTR [rbp-4], 1
        mov     DWORD PTR [rbp-8], 0
        jmp     .L2
.L4:
        mov     eax, DWORD PTR [rbp-20]
        cdq
        idiv    DWORD PTR [rbp-4]
        mov     eax, edx
        test    eax, eax
        jne     .L3
        mov     eax, DWORD PTR [rbp-4]
        add     DWORD PTR [rbp-8], eax
.L3:
        add     DWORD PTR [rbp-4], 1
.L2:
        mov     eax, DWORD PTR [rbp-20]
        mov     edx, eax
        shr     edx, 31
        add     eax, edx
        sar     eax
        cmp     DWORD PTR [rbp-4], eax
        jle     .L4
        mov     eax, DWORD PTR [rbp-8]
        cmp     eax, DWORD PTR [rbp-20]
        jne     .L5
        mov     eax, 1
        jmp     .L6
.L5:
        mov     eax, 0
.L6:
        pop     rbp
        ret
.LC0:
        .string "Tokeletes szam? %d\n"
main:
        push    rbp
        mov     rbp, rsp
        sub     rsp, 16
        mov     edi, 6
        call    is_perfect
        mov     DWORD PTR [rbp-4], eax
        mov     eax, DWORD PTR [rbp-4]
        mov     esi, eax
        mov     edi, OFFSET FLAT:.LC0
        mov     eax, 0
        call    printf
        mov     eax, 0
        leave
        ret